import { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from "react/jsx-runtime";
import { Card, CardContent, CardHeader, CardTitle, CardDescription } from "../components/ui/card";
import { Button } from "../components/ui/button";
import { Badge } from "../components/ui/badge";
import { Tabs, TabsContent, TabsList, TabsTrigger } from "../components/ui/tabs";
import { Progress } from "../components/ui/progress";
import { PageLayout } from "../components/page-layout";
import { ProtectedRoute } from "../components/auth/protected-route";
import { Brain, TrendingUp, AlertTriangle, Lightbulb, Target, Zap, Eye, Settings, Calculator, RefreshCw } from "lucide-react";
import { useAIInsights } from "../hooks/useAIInsights";
import { useAIInsightsList } from "../hooks/useAIInsightsList";
import { inventoryApi } from "../lib/api/inventory";
import { useQuery } from "@tanstack/react-query";
import { getCompanyId } from "../lib/config";
import { useState } from "react";
export default function AIInsightsPage() {
    const { data, loading, error, refetch, generateInsights } = useAIInsights();
    const { insights: realInsights, loading: insightsLoading, error: insightsError, refetch: refetchInsights } = useAIInsightsList();
    const [isGenerating, setIsGenerating] = useState(false);
    const companyId = getCompanyId();
    // Fetch real inventory alerts
    const alertsQuery = useQuery({
        queryKey: ['alerts', companyId],
        queryFn: async () => {
            return await inventoryApi.getAlerts({ companyId });
        },
        enabled: !!companyId
    });
    const alerts = alertsQuery.data || [];
    const handleGenerateInsights = async () => {
        try {
            setIsGenerating(true);
            await generateInsights('financial_anomaly');
            await refetch();
        }
        catch (err) {
            console.error('Error generating insights:', err);
        }
        finally {
            setIsGenerating(false);
        }
    };
    if (loading) {
        return (_jsx(ProtectedRoute, { children: _jsx(PageLayout, { children: _jsx("div", { className: "flex-1 space-y-6 p-6", children: _jsx("div", { className: "flex items-center justify-center h-64", children: _jsxs("div", { className: "flex items-center gap-2", children: [_jsx(RefreshCw, { className: "w-4 h-4 animate-spin" }), _jsx("span", { children: "Loading AI Insights..." })] }) }) }) }) }));
    }
    if (error) {
        return (_jsx(ProtectedRoute, { children: _jsx(PageLayout, { children: _jsx("div", { className: "flex-1 space-y-6 p-6", children: _jsx("div", { className: "flex items-center justify-center h-64", children: _jsxs("div", { className: "text-center", children: [_jsx(AlertTriangle, { className: "w-12 h-12 text-red-500 mx-auto mb-4" }), _jsx("h3", { className: "text-lg font-semibold mb-2", children: "Error Loading AI Insights" }), _jsx("p", { className: "text-muted-foreground mb-4", children: error?.message || error?.toString() || 'Unknown error' }), _jsxs(Button, { onClick: refetch, children: [_jsx(RefreshCw, { className: "w-4 h-4 mr-2" }), "Try Again"] })] }) }) }) }) }));
    }
    return (_jsx(ProtectedRoute, { children: _jsx(PageLayout, { children: _jsxs("div", { className: "flex-1 space-y-6 p-6", children: [_jsxs("div", { className: "flex items-center justify-between", children: [_jsxs("div", { children: [_jsx("h1", { className: "text-3xl font-bold text-balance", children: "AI Insights & Predictions" }), _jsx("p", { className: "text-muted-foreground", children: "Leverage AI to optimize your financial performance and predict trends" })] }), _jsxs("div", { className: "flex gap-2", children: [_jsxs(Button, { variant: "outline", children: [_jsx(Settings, { className: "w-4 h-4 mr-2" }), "AI Settings"] }), _jsxs(Button, { onClick: handleGenerateInsights, disabled: isGenerating, children: [isGenerating ? (_jsx(RefreshCw, { className: "w-4 h-4 mr-2 animate-spin" })) : (_jsx(Brain, { className: "w-4 h-4 mr-2" })), isGenerating ? 'Generating...' : 'Generate Insights'] })] })] }), _jsx(Card, { className: "bg-gradient-to-r from-cyan-50 to-blue-50 border-cyan-200", children: _jsxs(CardContent, { className: "p-6", children: [_jsxs("div", { className: "flex items-center justify-between", children: [_jsxs("div", { className: "flex items-center gap-4", children: [_jsx("div", { className: "w-16 h-16 bg-cyan-100 rounded-full flex items-center justify-center", children: _jsx(Brain, { className: "w-8 h-8 text-cyan-600" }) }), _jsxs("div", { children: [_jsx("h2", { className: "text-2xl font-bold", children: "Financial Health Score" }), _jsx("p", { className: "text-muted-foreground", children: "AI-powered assessment of your business performance" })] })] }), _jsxs("div", { className: "text-right", children: [_jsx("div", { className: "text-4xl font-bold text-cyan-600", children: data?.healthScore?.score || 0 }), _jsx("div", { className: "text-sm text-muted-foreground", children: (data?.healthScore?.score || 0) >= 80 ? 'Excellent' :
                                                        (data?.healthScore?.score || 0) >= 60 ? 'Good' :
                                                            (data?.healthScore?.score || 0) >= 40 ? 'Fair' : 'Needs Improvement' }), _jsxs(Badge, { variant: "default", className: "mt-1", children: [(data?.healthScore?.revenueGrowth || 0) > 0 ? '+' : '', (data?.healthScore?.revenueGrowth || 0).toFixed(1), "% growth"] })] })] }), _jsx("div", { className: "mt-4", children: _jsx(Progress, { value: data?.healthScore.score || 0, className: "h-3" }) }), _jsxs("div", { className: "mt-4 grid grid-cols-2 md:grid-cols-4 gap-4 text-sm", children: [_jsxs("div", { children: [_jsx("span", { className: "text-muted-foreground", children: "Payment Rate:" }), _jsxs("span", { className: "ml-2 font-medium", children: [data?.healthScore?.paymentRate || 0, "%"] })] }), _jsxs("div", { children: [_jsx("span", { className: "text-muted-foreground", children: "Profit Margin:" }), _jsxs("span", { className: "ml-2 font-medium", children: [data?.healthScore?.profitMargin || 0, "%"] })] }), _jsxs("div", { children: [_jsx("span", { className: "text-muted-foreground", children: "Revenue Growth:" }), _jsxs("span", { className: "ml-2 font-medium", children: [data?.healthScore?.revenueGrowth || 0, "%"] })] }), _jsxs("div", { children: [_jsx("span", { className: "text-muted-foreground", children: "Overdue:" }), _jsxs("span", { className: "ml-2 font-medium", children: [data?.healthScore?.overduePercentage || 0, "%"] })] })] })] }) }), _jsxs("div", { className: "grid grid-cols-1 md:grid-cols-4 gap-4", children: [_jsx(Card, { children: _jsx(CardContent, { className: "p-4", children: _jsxs("div", { className: "flex items-center gap-3", children: [_jsx("div", { className: "w-10 h-10 bg-green-100 rounded-lg flex items-center justify-center", children: _jsx(TrendingUp, { className: "w-5 h-5 text-green-600" }) }), _jsxs("div", { children: [_jsx("p", { className: "text-sm text-muted-foreground", children: "Prediction Accuracy" }), _jsxs("p", { className: "text-xl font-bold", children: [data?.aiMetrics.predictionAccuracy, "%"] })] })] }) }) }), _jsx(Card, { children: _jsx(CardContent, { className: "p-4", children: _jsxs("div", { className: "flex items-center gap-3", children: [_jsx("div", { className: "w-10 h-10 bg-amber-100 rounded-lg flex items-center justify-center", children: _jsx(AlertTriangle, { className: "w-5 h-5 text-amber-600" }) }), _jsxs("div", { children: [_jsx("p", { className: "text-sm text-muted-foreground", children: "Anomalies Detected" }), _jsx("p", { className: "text-xl font-bold", children: data?.aiMetrics.anomaliesDetected })] })] }) }) }), _jsx(Card, { children: _jsx(CardContent, { className: "p-4", children: _jsxs("div", { className: "flex items-center gap-3", children: [_jsx("div", { className: "w-10 h-10 bg-blue-100 rounded-lg flex items-center justify-center", children: _jsx(Lightbulb, { className: "w-5 h-5 text-blue-600" }) }), _jsxs("div", { children: [_jsx("p", { className: "text-sm text-muted-foreground", children: "Active Recommendations" }), _jsx("p", { className: "text-xl font-bold", children: data?.aiMetrics.activeRecommendations })] })] }) }) }), _jsx(Card, { children: _jsx(CardContent, { className: "p-4", children: _jsxs("div", { className: "flex items-center gap-3", children: [_jsx("div", { className: "w-10 h-10 bg-purple-100 rounded-lg flex items-center justify-center", children: _jsx(Target, { className: "w-5 h-5 text-purple-600" }) }), _jsxs("div", { children: [_jsx("p", { className: "text-sm text-muted-foreground", children: "Goals on Track" }), _jsx("p", { className: "text-xl font-bold", children: data?.aiMetrics.goalsOnTrack })] })] }) }) })] }), _jsxs(Tabs, { defaultValue: "predictions", className: "space-y-4", children: [_jsxs(TabsList, { children: [_jsx(TabsTrigger, { value: "predictions", children: "Predictions" }), _jsx(TabsTrigger, { value: "anomalies", children: "Anomaly Detection" }), _jsx(TabsTrigger, { value: "recommendations", children: "Recommendations" }), _jsx(TabsTrigger, { value: "tax-optimization", children: "Tax Optimization" }), _jsx(TabsTrigger, { value: "insights", children: "Smart Insights" })] }), _jsxs(TabsContent, { value: "predictions", className: "space-y-4", children: [_jsxs("div", { className: "grid grid-cols-1 md:grid-cols-2 gap-4", children: [_jsxs(Card, { children: [_jsx(CardHeader, { children: _jsxs(CardTitle, { className: "flex items-center gap-2", children: [_jsx(TrendingUp, { className: "w-5 h-5 text-green-600" }), "Revenue Forecast"] }) }), _jsx(CardContent, { children: _jsx("div", { className: "space-y-4", children: loading ? (_jsxs("div", { className: "flex items-center justify-center py-8", children: [_jsx(RefreshCw, { className: "h-4 w-4 animate-spin mr-2" }), _jsx("span", { className: "text-sm text-muted-foreground", children: "Loading predictions..." })] })) : error ? (_jsxs("div", { className: "flex items-center justify-center py-8 text-red-600", children: [_jsx(AlertTriangle, { className: "h-4 w-4 mr-2" }), _jsx("span", { className: "text-sm", children: "Error loading predictions" })] })) : data?.revenuePredictions ? (_jsxs(_Fragment, { children: [_jsxs("div", { className: "p-4 bg-green-50 border border-green-200 rounded-lg", children: [_jsx("h3", { className: "font-medium text-green-800", children: "AI Revenue Predictions" }), _jsx("p", { className: "text-sm text-green-700", children: "Based on your financial data and AI analysis" })] }), _jsxs("div", { className: "space-y-3", children: [_jsxs("div", { className: "flex items-center justify-between p-3 border rounded-lg", children: [_jsxs("div", { children: [_jsx("p", { className: "font-medium", children: "Next Month" }), _jsxs("p", { className: "text-sm text-muted-foreground", children: ["Confidence: ", data.revenuePredictions.nextMonth.confidence, "%"] })] }), _jsxs("div", { className: "text-right", children: [_jsxs("p", { className: "text-lg font-bold text-green-600", children: ["$", data.revenuePredictions.nextMonth.amount.toLocaleString()] }), data.revenuePredictions.nextMonth.change && (_jsxs("p", { className: "text-sm text-green-600", children: ["+", data.revenuePredictions.nextMonth.change, "%"] }))] })] }), _jsxs("div", { className: "flex items-center justify-between p-3 border rounded-lg", children: [_jsxs("div", { children: [_jsx("p", { className: "font-medium", children: "Next Quarter" }), _jsxs("p", { className: "text-sm text-muted-foreground", children: ["Confidence: ", data.revenuePredictions.nextQuarter.confidence, "%"] })] }), _jsx("div", { className: "text-right", children: _jsxs("p", { className: "text-lg font-bold text-blue-600", children: ["$", data.revenuePredictions.nextQuarter.amount.toLocaleString()] }) })] }), _jsxs("div", { className: "flex items-center justify-between p-3 border rounded-lg", children: [_jsxs("div", { children: [_jsx("p", { className: "font-medium", children: "Next Year" }), _jsxs("p", { className: "text-sm text-muted-foreground", children: ["Confidence: ", data.revenuePredictions.nextYear.confidence, "%"] })] }), _jsx("div", { className: "text-right", children: _jsxs("p", { className: "text-lg font-bold text-purple-600", children: ["$", data.revenuePredictions.nextYear.amount.toLocaleString()] }) })] })] })] })) : (_jsxs("div", { className: "text-center py-4 text-muted-foreground", children: [_jsx(TrendingUp, { className: "h-8 w-8 mx-auto mb-2 opacity-50" }), _jsx("p", { className: "text-sm", children: "No revenue predictions available" }), _jsx("p", { className: "text-xs", children: "AI is analyzing your revenue patterns" })] })) }) })] }), _jsxs(Card, { children: [_jsx(CardHeader, { children: _jsxs(CardTitle, { className: "flex items-center gap-2", children: [_jsx(Zap, { className: "w-5 h-5 text-blue-600" }), "Cash Flow Forecast"] }) }), _jsx(CardContent, { children: _jsx("div", { className: "space-y-4", children: loading ? (_jsxs("div", { className: "flex items-center justify-center py-8", children: [_jsx(RefreshCw, { className: "h-4 w-4 animate-spin mr-2" }), _jsx("span", { className: "text-sm text-muted-foreground", children: "Loading cash flow insights..." })] })) : error ? (_jsxs("div", { className: "flex items-center justify-center py-8 text-red-600", children: [_jsx(AlertTriangle, { className: "h-4 w-4 mr-2" }), _jsx("span", { className: "text-sm", children: "Error loading cash flow insights" })] })) : data?.cashFlowPredictions ? (_jsxs(_Fragment, { children: [_jsxs("div", { className: "p-4 bg-blue-50 border border-blue-200 rounded-lg", children: [_jsx("h3", { className: "font-medium text-blue-800", children: "AI Cash Flow Analysis" }), _jsx("p", { className: "text-sm text-blue-700", children: "Based on your transaction patterns and AI analysis" })] }), _jsxs("div", { className: "space-y-3", children: [_jsxs("div", { className: "p-3 border rounded-lg", children: [_jsxs("div", { className: "flex items-center justify-between mb-2", children: [_jsx("p", { className: "font-medium", children: "Current Position" }), _jsxs("p", { className: `text-lg font-bold ${data.cashFlowPredictions.currentPosition >= 0 ? 'text-green-600' : 'text-red-600'}`, children: ["$", data.cashFlowPredictions.currentPosition.toLocaleString()] })] }), _jsxs("div", { className: "grid grid-cols-2 gap-4 text-sm", children: [_jsxs("div", { children: [_jsx("span", { className: "text-muted-foreground", children: "Expected Inflows:" }), _jsxs("span", { className: "ml-2 font-medium text-green-600", children: ["$", data.cashFlowPredictions.expectedInflows.toLocaleString()] })] }), _jsxs("div", { children: [_jsx("span", { className: "text-muted-foreground", children: "Expected Outflows:" }), _jsxs("span", { className: "ml-2 font-medium text-red-600", children: ["$", data.cashFlowPredictions.expectedOutflows.toLocaleString()] })] })] })] }), _jsx("div", { className: "p-3 border rounded-lg", children: _jsxs("div", { className: "flex items-center justify-between", children: [_jsxs("div", { children: [_jsx("p", { className: "font-medium", children: "Net Cash Flow" }), _jsxs("p", { className: "text-sm text-muted-foreground", children: ["Status: ", data.cashFlowPredictions.status] })] }), _jsx("div", { className: "text-right", children: _jsxs("p", { className: `text-lg font-bold ${data.cashFlowPredictions.netCashFlow >= 0 ? 'text-green-600' : 'text-red-600'}`, children: ["$", data.cashFlowPredictions.netCashFlow.toLocaleString()] }) })] }) })] })] })) : (_jsxs("div", { className: "text-center py-4 text-muted-foreground", children: [_jsx(Zap, { className: "h-8 w-8 mx-auto mb-2 opacity-50" }), _jsx("p", { className: "text-sm", children: "No cash flow predictions available" }), _jsx("p", { className: "text-xs", children: "AI is analyzing your cash flow patterns" })] })) }) })] })] }), _jsxs(Card, { children: [_jsxs(CardHeader, { children: [_jsx(CardTitle, { children: "AI Insights Summary" }), _jsx(CardDescription, { children: "Overview of all AI-generated insights and patterns" })] }), _jsx(CardContent, { children: _jsxs("div", { className: "grid grid-cols-1 md:grid-cols-3 gap-4", children: [_jsxs("div", { className: "p-4 border rounded-lg", children: [_jsx("h3", { className: "font-medium mb-2", children: "High Priority Insights" }), _jsx("p", { className: "text-lg font-bold text-red-600", children: realInsights.filter(insight => insight.priority === 'high').length }), _jsx("p", { className: "text-sm text-muted-foreground", children: "Urgent recommendations requiring attention" })] }), _jsxs("div", { className: "p-4 border rounded-lg", children: [_jsx("h3", { className: "font-medium mb-2", children: "Revenue Insights" }), _jsx("p", { className: "text-lg font-bold text-green-600", children: data?.revenuePredictions ? 3 : 0 }), _jsx("p", { className: "text-sm text-muted-foreground", children: "AI revenue predictions available" })] }), _jsxs("div", { className: "p-4 border rounded-lg", children: [_jsx("h3", { className: "font-medium mb-2", children: "Risk Alerts" }), _jsx("p", { className: "text-lg font-bold text-amber-600", children: alerts.length }), _jsx("p", { className: "text-sm text-muted-foreground", children: "Active inventory alerts" })] })] }) })] })] }), _jsx(TabsContent, { value: "anomalies", className: "space-y-4", children: _jsxs(Card, { children: [_jsx(CardHeader, { children: _jsxs("div", { className: "flex items-center justify-between", children: [_jsxs(CardTitle, { className: "flex items-center gap-2", children: [_jsx(AlertTriangle, { className: "w-5 h-5 text-amber-600" }), "AI-Detected Anomalies"] }), _jsxs("div", { className: "flex items-center gap-2", children: [_jsxs(Badge, { variant: "secondary", children: [realInsights.filter(insight => insight.priority === 'high' || insight.impact === 'high').length, " Critical"] }), _jsx(Button, { variant: "ghost", size: "sm", onClick: refetchInsights, children: _jsx(RefreshCw, { className: "h-4 w-4" }) })] })] }) }), _jsx(CardContent, { children: _jsx("div", { className: "space-y-4", children: insightsLoading ? (_jsxs("div", { className: "flex items-center justify-center py-8", children: [_jsx(RefreshCw, { className: "h-4 w-4 animate-spin mr-2" }), _jsx("span", { className: "text-sm text-muted-foreground", children: "Loading anomalies..." })] })) : insightsError ? (_jsxs("div", { className: "flex items-center justify-center py-8 text-red-600", children: [_jsx(AlertTriangle, { className: "h-4 w-4 mr-2" }), _jsx("span", { className: "text-sm", children: "Error loading anomalies" })] })) : realInsights.length > 0 ? (realInsights
                                                    .filter(insight => insight.priority === 'high' || insight.impact === 'high')
                                                    .map((insight) => (_jsx("div", { className: `p-4 border rounded-lg ${insight.priority === "high"
                                                        ? "border-red-200 bg-red-50"
                                                        : insight.priority === "medium"
                                                            ? "border-amber-200 bg-amber-50"
                                                            : "border-blue-200 bg-blue-50"}`, children: _jsxs("div", { className: "flex items-start justify-between", children: [_jsxs("div", { className: "flex-1", children: [_jsxs("div", { className: "flex items-center gap-2 mb-2", children: [_jsx("h3", { className: "font-medium", children: insight.type.replace('_', ' ').toUpperCase() }), _jsx(Badge, { variant: insight.priority === "high"
                                                                                    ? "destructive"
                                                                                    : insight.priority === "medium"
                                                                                        ? "secondary"
                                                                                        : "outline", children: insight.priority.toUpperCase() }), _jsxs(Badge, { variant: "outline", className: "text-xs", children: [Math.round(insight.confidence * 100), "% confidence"] })] }), _jsx("p", { className: "text-sm text-muted-foreground mb-2", children: insight.description }), _jsxs("div", { className: "flex items-center gap-4 text-sm", children: [_jsxs("span", { className: "font-medium text-cyan-600", children: ["Impact: ", insight.impact?.toUpperCase() || 'MEDIUM'] }), _jsx("span", { className: "text-muted-foreground", children: new Date(insight.generatedAt).toLocaleDateString() })] })] }), _jsx("div", { className: "flex items-center gap-2", children: _jsx(Button, { variant: "ghost", size: "sm", children: _jsx(Eye, { className: "w-4 h-4" }) }) })] }) }, insight.id)))) : (_jsxs("div", { className: "text-center py-8 text-muted-foreground", children: [_jsx(AlertTriangle, { className: "h-8 w-8 mx-auto mb-2 opacity-50" }), _jsx("p", { className: "text-sm", children: "No critical anomalies detected" }), _jsx("p", { className: "text-xs", children: "Your financial data looks healthy!" })] })) }) })] }) }), _jsx(TabsContent, { value: "recommendations", className: "space-y-4", children: _jsxs(Card, { children: [_jsx(CardHeader, { children: _jsxs("div", { className: "flex items-center justify-between", children: [_jsxs(CardTitle, { className: "flex items-center gap-2", children: [_jsx(Lightbulb, { className: "w-5 h-5 text-blue-600" }), "AI Recommendations"] }), _jsxs("div", { className: "flex items-center gap-2", children: [_jsxs(Badge, { variant: "secondary", children: [realInsights.length, " Active"] }), _jsx(Button, { variant: "ghost", size: "sm", onClick: refetchInsights, children: _jsx(RefreshCw, { className: "h-4 w-4" }) })] })] }) }), _jsx(CardContent, { children: _jsx("div", { className: "space-y-4", children: insightsLoading ? (_jsxs("div", { className: "flex items-center justify-center py-8", children: [_jsx(RefreshCw, { className: "h-4 w-4 animate-spin mr-2" }), _jsx("span", { className: "text-sm text-muted-foreground", children: "Loading recommendations..." })] })) : insightsError ? (_jsxs("div", { className: "flex items-center justify-center py-8 text-red-600", children: [_jsx(AlertTriangle, { className: "h-4 w-4 mr-2" }), _jsx("span", { className: "text-sm", children: "Error loading recommendations" })] })) : realInsights.length > 0 ? (realInsights.map((insight) => (_jsx("div", { className: "p-4 border rounded-lg hover:bg-muted/50", children: _jsxs("div", { className: "flex items-start justify-between", children: [_jsxs("div", { className: "flex-1", children: [_jsxs("div", { className: "flex items-center gap-2 mb-2", children: [_jsx(Badge, { variant: "outline", children: insight.category.replace('_', ' ').toUpperCase() }), _jsxs(Badge, { variant: insight.priority === "high"
                                                                                    ? "default"
                                                                                    : insight.priority === "medium"
                                                                                        ? "secondary"
                                                                                        : "outline", children: [insight.priority.toUpperCase(), " PRIORITY"] }), insight.confidence && (_jsxs(Badge, { variant: "outline", className: "text-xs", children: [Math.round(insight.confidence * 100), "% confidence"] }))] }), _jsx("h3", { className: "font-medium mb-1", children: insight.type.replace('_', ' ').toUpperCase() }), _jsx("p", { className: "text-sm text-muted-foreground mb-2", children: insight.description }), _jsxs("div", { className: "flex items-center gap-4 text-sm", children: [_jsxs("span", { children: ["Impact: ", insight.impact?.toUpperCase() || 'MEDIUM'] }), _jsx("span", { className: "text-muted-foreground", children: new Date(insight.generatedAt).toLocaleDateString() })] })] }), _jsxs("div", { className: "flex gap-2", children: [_jsx(Button, { variant: "outline", size: "sm", children: "Dismiss" }), _jsx(Button, { size: "sm", children: "Apply" })] })] }) }, insight.id)))) : (_jsxs("div", { className: "text-center py-8 text-muted-foreground", children: [_jsx(Lightbulb, { className: "h-8 w-8 mx-auto mb-2 opacity-50" }), _jsx("p", { className: "text-sm", children: "No recommendations available" }), _jsx("p", { className: "text-xs", children: "AI is analyzing your data to provide personalized recommendations" })] })) }) })] }) }), _jsxs(TabsContent, { value: "tax-optimization", className: "space-y-4", children: [_jsxs("div", { className: "grid grid-cols-1 md:grid-cols-2 gap-4", children: [_jsxs(Card, { children: [_jsxs(CardHeader, { children: [_jsxs(CardTitle, { className: "flex items-center gap-2", children: [_jsx(Calculator, { className: "w-5 h-5 text-green-600" }), "AI Tax Optimization Insights"] }), _jsx(CardDescription, { children: "AI-powered tax optimization recommendations based on your data" })] }), _jsx(CardContent, { className: "space-y-4", children: insightsLoading ? (_jsxs("div", { className: "flex items-center justify-center py-8", children: [_jsx(RefreshCw, { className: "h-4 w-4 animate-spin mr-2" }), _jsx("span", { className: "text-sm text-muted-foreground", children: "Loading tax insights..." })] })) : insightsError ? (_jsxs("div", { className: "flex items-center justify-center py-8 text-red-600", children: [_jsx(AlertTriangle, { className: "h-4 w-4 mr-2" }), _jsx("span", { className: "text-sm", children: "Error loading tax insights" })] })) : (_jsxs("div", { className: "space-y-3", children: [_jsxs("div", { className: "flex items-center justify-between p-3 bg-green-50 rounded-lg border border-green-200", children: [_jsxs("div", { children: [_jsx("p", { className: "font-medium text-green-800", children: "AI Tax Insights" }), _jsx("p", { className: "text-2xl font-bold text-green-600", children: realInsights.filter(insight => insight.category === 'financial' || insight.description.toLowerCase().includes('tax')).length })] }), _jsx(Badge, { variant: "default", className: "bg-green-100 text-green-800", children: "Active" })] }), _jsxs("div", { className: "flex items-center justify-between p-3 bg-blue-50 rounded-lg border border-blue-200", children: [_jsxs("div", { children: [_jsx("p", { className: "font-medium text-blue-800", children: "High Priority" }), _jsx("p", { className: "text-2xl font-bold text-blue-600", children: realInsights.filter(insight => insight.priority === 'high' && (insight.category === 'financial' || insight.description.toLowerCase().includes('tax'))).length })] }), _jsx(Badge, { variant: "secondary", className: "bg-blue-100 text-blue-800", children: "Critical" })] })] })) })] }), _jsxs(Card, { children: [_jsxs(CardHeader, { children: [_jsx(CardTitle, { children: "AI Tax Strategies" }), _jsx(CardDescription, { children: "AI-generated tax optimization recommendations" })] }), _jsx(CardContent, { className: "space-y-4", children: _jsxs("div", { className: "space-y-3", children: [realInsights
                                                                    .filter(insight => insight.category === 'financial' || insight.type === 'tax' || insight.description.toLowerCase().includes('tax'))
                                                                    .slice(0, 5)
                                                                    .map((insight) => (_jsx("div", { className: "p-4 border rounded-lg hover:bg-muted/50", children: _jsxs("div", { className: "flex items-start justify-between", children: [_jsxs("div", { className: "flex-1", children: [_jsxs("div", { className: "flex items-center gap-2 mb-2", children: [_jsx(Badge, { variant: "outline", children: insight.category.replace('_', ' ').toUpperCase() }), _jsxs(Badge, { variant: insight.priority === "high"
                                                                                                    ? "default"
                                                                                                    : insight.priority === "medium"
                                                                                                        ? "secondary"
                                                                                                        : "outline", children: [insight.priority.toUpperCase(), " PRIORITY"] }), _jsxs(Badge, { variant: "outline", className: "text-xs", children: [Math.round(insight.confidence * 100), "% confidence"] })] }), _jsx("h3", { className: "font-medium mb-1", children: insight.type.replace('_', ' ').toUpperCase() }), _jsx("p", { className: "text-sm text-muted-foreground mb-2", children: insight.description }), _jsxs("div", { className: "flex items-center gap-4 text-sm", children: [_jsxs("span", { className: "font-medium text-green-600", children: ["Impact: ", insight.impact?.toUpperCase() || 'MEDIUM'] }), _jsx("span", { className: "text-muted-foreground", children: new Date(insight.generatedAt).toLocaleDateString() })] })] }), _jsxs("div", { className: "flex gap-2", children: [_jsx(Button, { variant: "outline", size: "sm", children: "Learn More" }), _jsx(Button, { size: "sm", children: "Apply" })] })] }) }, insight.id))), realInsights.filter(insight => insight.category === 'financial' || insight.type === 'tax' || insight.description.toLowerCase().includes('tax')).length === 0 && (_jsxs("div", { className: "text-center py-8 text-muted-foreground", children: [_jsx(Calculator, { className: "h-8 w-8 mx-auto mb-2 opacity-50" }), _jsx("p", { className: "text-sm", children: "No tax optimization insights available" }), _jsx("p", { className: "text-xs", children: "AI is analyzing your financial data to provide tax strategies" })] }))] }) })] })] }), _jsxs(Card, { children: [_jsxs(CardHeader, { children: [_jsx(CardTitle, { children: "Tax Calendar & Deadlines" }), _jsx(CardDescription, { children: "Important tax-related dates and deadlines" })] }), _jsx(CardContent, { children: _jsx("div", { className: "grid grid-cols-1 md:grid-cols-3 gap-4", children: [
                                                        {
                                                            date: "Dec 31, 2024",
                                                            event: "Year-End Equipment Purchases",
                                                            type: "deadline",
                                                            description: "Last day to purchase equipment for current year depreciation"
                                                        },
                                                        {
                                                            date: "Jan 15, 2025",
                                                            event: "Q4 Estimated Tax Payment",
                                                            type: "payment",
                                                            description: "Final estimated tax payment for 2024"
                                                        },
                                                        {
                                                            date: "Mar 15, 2025",
                                                            event: "S-Corp Tax Return",
                                                            type: "filing",
                                                            description: "S-Corporation tax return deadline"
                                                        }
                                                    ].map((item, index) => (_jsxs("div", { className: "p-4 border rounded-lg", children: [_jsxs("div", { className: "flex items-center gap-2 mb-2", children: [_jsx(Badge, { variant: item.type === "deadline"
                                                                            ? "destructive"
                                                                            : item.type === "payment"
                                                                                ? "default"
                                                                                : "secondary", children: item.type }), _jsx("span", { className: "font-medium", children: item.date })] }), _jsx("h3", { className: "font-medium mb-1", children: item.event }), _jsx("p", { className: "text-sm text-muted-foreground", children: item.description })] }, index))) }) })] })] }), _jsxs(TabsContent, { value: "insights", className: "space-y-4", children: [_jsxs("div", { className: "grid grid-cols-1 md:grid-cols-2 gap-4", children: [_jsxs(Card, { children: [_jsxs(CardHeader, { children: [_jsx(CardTitle, { children: "AI Performance Insights" }), _jsx(CardDescription, { children: "AI-generated performance analysis based on your data" })] }), _jsx(CardContent, { children: _jsx("div", { className: "space-y-4", children: insightsLoading ? (_jsxs("div", { className: "flex items-center justify-center py-8", children: [_jsx(RefreshCw, { className: "h-4 w-4 animate-spin mr-2" }), _jsx("span", { className: "text-sm text-muted-foreground", children: "Loading performance insights..." })] })) : insightsError ? (_jsxs("div", { className: "flex items-center justify-center py-8 text-red-600", children: [_jsx(AlertTriangle, { className: "h-4 w-4 mr-2" }), _jsx("span", { className: "text-sm", children: "Error loading performance insights" })] })) : (_jsxs(_Fragment, { children: [_jsxs("div", { className: "p-4 bg-cyan-50 border border-cyan-200 rounded-lg", children: [_jsx("h3", { className: "font-medium text-cyan-800 mb-2", children: "AI Analysis Summary" }), _jsxs("p", { className: "text-sm text-cyan-700", children: ["AI has analyzed ", realInsights.length, " insights across your financial data, identifying key patterns and opportunities."] })] }), _jsxs("div", { className: "space-y-3", children: [_jsxs("div", { className: "flex items-center justify-between p-3 border rounded-lg", children: [_jsx("span", { className: "text-sm", children: "High Priority Insights" }), _jsx("span", { className: "font-medium text-red-600", children: realInsights.filter(insight => insight.priority === 'high').length })] }), _jsxs("div", { className: "flex items-center justify-between p-3 border rounded-lg", children: [_jsx("span", { className: "text-sm", children: "Revenue Insights" }), _jsx("span", { className: "font-medium text-green-600", children: data?.revenuePredictions ? 3 : 0 })] }), _jsxs("div", { className: "flex items-center justify-between p-3 border rounded-lg", children: [_jsx("span", { className: "text-sm", children: "Risk Alerts" }), _jsx("span", { className: "font-medium text-amber-600", children: alerts.length })] }), _jsxs("div", { className: "flex items-center justify-between p-3 border rounded-lg", children: [_jsx("span", { className: "text-sm", children: "Cash Flow Insights" }), _jsx("span", { className: "font-medium text-blue-600", children: data?.cashFlowPredictions ? 1 : 0 })] })] })] })) }) })] }), _jsxs(Card, { children: [_jsx(CardHeader, { children: _jsxs(CardTitle, { className: "flex items-center gap-2", children: [_jsx(AlertTriangle, { className: "w-5 h-5 text-amber-600" }), "Real Inventory Alerts"] }) }), _jsx(CardContent, { children: alertsQuery.isLoading ? (_jsxs("div", { className: "flex items-center justify-center py-8", children: [_jsx(RefreshCw, { className: "h-4 w-4 animate-spin mr-2" }), _jsx("span", { className: "text-sm text-muted-foreground", children: "Loading alerts..." })] })) : alerts.length === 0 ? (_jsxs("div", { className: "text-center py-8 text-muted-foreground", children: [_jsx(AlertTriangle, { className: "w-12 h-12 mx-auto mb-4 opacity-50" }), _jsx("p", { className: "text-lg font-medium", children: "No active alerts" }), _jsx("p", { className: "text-sm", children: "All inventory levels are within normal parameters" })] })) : (_jsxs("div", { className: "space-y-3", children: [alerts.slice(0, 5).map((alert) => (_jsxs("div", { className: "flex items-center justify-between p-3 border rounded-lg hover:bg-muted/50", children: [_jsxs("div", { className: "flex items-center gap-3", children: [_jsx("div", { className: "w-8 h-8 bg-amber-100 rounded-lg flex items-center justify-center", children: _jsx(AlertTriangle, { className: "w-4 h-4 text-amber-600" }) }), _jsxs("div", { children: [_jsx("p", { className: "font-medium", children: alert.product?.name || 'Unknown Product' }), _jsxs("p", { className: "text-sm text-muted-foreground", children: [alert.alertType?.replace('_', ' ').toLowerCase(), " \u2022 Current: ", alert.product?.stockQuantity || 0, " \u2022 Threshold: ", alert.threshold] })] })] }), _jsx(Badge, { variant: "outline", className: "text-amber-600 border-amber-200", children: alert.status })] }, alert.id))), alerts.length > 5 && (_jsx("div", { className: "text-center py-2", children: _jsxs(Button, { variant: "ghost", size: "sm", children: ["View ", alerts.length - 5, " more alerts"] }) }))] })) })] }), _jsxs(Card, { children: [_jsxs(CardHeader, { children: [_jsx(CardTitle, { children: "AI Market Intelligence" }), _jsx(CardDescription, { children: "AI-powered market analysis and competitive insights" })] }), _jsx(CardContent, { children: _jsx("div", { className: "space-y-4", children: insightsLoading ? (_jsxs("div", { className: "flex items-center justify-center py-8", children: [_jsx(RefreshCw, { className: "h-4 w-4 animate-spin mr-2" }), _jsx("span", { className: "text-sm text-muted-foreground", children: "Loading market insights..." })] })) : insightsError ? (_jsxs("div", { className: "flex items-center justify-center py-8 text-red-600", children: [_jsx(AlertTriangle, { className: "h-4 w-4 mr-2" }), _jsx("span", { className: "text-sm", children: "Error loading market insights" })] })) : (_jsxs(_Fragment, { children: [_jsxs("div", { className: "p-4 bg-blue-50 border border-blue-200 rounded-lg", children: [_jsx("h3", { className: "font-medium text-blue-800 mb-2", children: "AI Market Analysis" }), _jsxs("p", { className: "text-sm text-blue-700", children: ["AI has identified ", realInsights.filter(insight => insight.category === 'financial' || insight.type === 'financial').length, " market-related insights from your financial patterns."] })] }), _jsxs("div", { className: "space-y-3", children: [_jsxs("div", { className: "p-3 border rounded-lg", children: [_jsx("p", { className: "font-medium text-sm", children: "Total AI Insights" }), _jsx("p", { className: "text-lg font-bold text-blue-600", children: realInsights.length }), _jsx("p", { className: "text-xs text-muted-foreground", children: "Generated from your data" })] }), _jsxs("div", { className: "p-3 border rounded-lg", children: [_jsx("p", { className: "font-medium text-sm", children: "Confidence Level" }), _jsxs("p", { className: "text-lg font-bold text-green-600", children: [realInsights.length > 0 ? Math.round(realInsights.reduce((sum, insight) => sum + insight.confidence, 0) / realInsights.length * 100) : 0, "%"] }), _jsx("p", { className: "text-xs text-muted-foreground", children: "Average AI confidence" })] }), _jsxs("div", { className: "p-3 border rounded-lg", children: [_jsx("p", { className: "font-medium text-sm", children: "Recent Insights" }), _jsx("p", { className: "text-lg font-bold text-purple-600", children: realInsights.filter(insight => {
                                                                                            const insightDate = new Date(insight.generatedAt);
                                                                                            const weekAgo = new Date();
                                                                                            weekAgo.setDate(weekAgo.getDate() - 7);
                                                                                            return insightDate > weekAgo;
                                                                                        }).length }), _jsx("p", { className: "text-xs text-muted-foreground", children: "Generated this week" })] })] })] })) }) })] })] }), _jsxs(Card, { children: [_jsxs(CardHeader, { children: [_jsx(CardTitle, { children: "AI Learning Progress" }), _jsx(CardDescription, { children: "AI model performance and learning status" })] }), _jsx(CardContent, { children: _jsx("div", { className: "space-y-4", children: insightsLoading ? (_jsxs("div", { className: "flex items-center justify-center py-8", children: [_jsx(RefreshCw, { className: "h-4 w-4 animate-spin mr-2" }), _jsx("span", { className: "text-sm text-muted-foreground", children: "Loading AI metrics..." })] })) : insightsError ? (_jsxs("div", { className: "flex items-center justify-center py-8 text-red-600", children: [_jsx(AlertTriangle, { className: "h-4 w-4 mr-2" }), _jsx("span", { className: "text-sm", children: "Error loading AI metrics" })] })) : (_jsxs(_Fragment, { children: [_jsxs("div", { className: "grid grid-cols-1 md:grid-cols-3 gap-4", children: [_jsxs("div", { className: "text-center p-4 border rounded-lg", children: [_jsx("p", { className: "text-2xl font-bold text-blue-600", children: realInsights.length }), _jsx("p", { className: "text-sm text-muted-foreground", children: "Insights Generated" })] }), _jsxs("div", { className: "text-center p-4 border rounded-lg", children: [_jsxs("p", { className: "text-2xl font-bold text-green-600", children: [realInsights.length > 0 ? Math.round(realInsights.reduce((sum, insight) => sum + insight.confidence, 0) / realInsights.length * 100) : 0, "%"] }), _jsx("p", { className: "text-sm text-muted-foreground", children: "Average Confidence" })] }), _jsxs("div", { className: "text-center p-4 border rounded-lg", children: [_jsx("p", { className: "text-2xl font-bold text-purple-600", children: realInsights.filter(insight => insight.priority === 'high').length }), _jsx("p", { className: "text-sm text-muted-foreground", children: "High Priority Alerts" })] })] }), _jsxs("div", { className: "p-4 bg-green-50 border border-green-200 rounded-lg", children: [_jsxs("p", { className: "text-green-800 font-medium", children: ["AI Model Status: ", realInsights.length > 10 ? 'Fully Trained' : 'Learning'] }), _jsx("p", { className: "text-sm text-green-700", children: realInsights.length > 10
                                                                            ? `Your AI model has generated ${realInsights.length} insights and is providing highly accurate recommendations.`
                                                                            : `Your AI model is learning from your data. Generated ${realInsights.length} insights so far. More data will improve accuracy.` })] })] })) }) })] })] })] })] }) }) }));
}
