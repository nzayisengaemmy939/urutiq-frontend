import { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from "react/jsx-runtime";
import { forwardRef } from 'react';
import { formatCurrency } from '../lib/utils';
export const Receipt = forwardRef(({ data, className = '' }, ref) => {
    return (_jsxs("div", { ref: ref, className: `bg-white p-6 max-w-sm mx-auto text-sm font-mono ${className}`, style: { width: '300px' }, children: [_jsxs("div", { className: "text-center border-b border-gray-300 pb-4 mb-4", children: [_jsx("h1", { className: "text-lg font-bold text-gray-900", children: data.companyInfo.name }), data.companyInfo.address && (_jsx("p", { className: "text-xs text-gray-600 mt-1", children: data.companyInfo.address })), _jsxs("div", { className: "text-xs text-gray-600 mt-1", children: [data.companyInfo.phone && _jsxs("p", { children: ["Tel: ", data.companyInfo.phone] }), data.companyInfo.email && _jsxs("p", { children: ["Email: ", data.companyInfo.email] }), data.companyInfo.website && _jsxs("p", { children: ["Web: ", data.companyInfo.website] })] })] }), _jsxs("div", { className: "border-b border-gray-300 pb-2 mb-4", children: [_jsxs("div", { className: "flex justify-between", children: [_jsx("span", { children: "Receipt #:" }), _jsx("span", { children: data.invoiceNumber })] }), _jsxs("div", { className: "flex justify-between", children: [_jsx("span", { children: "Date:" }), _jsx("span", { children: data.date })] }), data.customer && (_jsxs("div", { className: "mt-2", children: [_jsxs("div", { className: "flex justify-between", children: [_jsx("span", { children: "Customer:" }), _jsx("span", { children: data.customer.name })] }), data.customer.phone && (_jsxs("div", { className: "flex justify-between", children: [_jsx("span", { children: "Phone:" }), _jsx("span", { children: data.customer.phone })] }))] }))] }), _jsx("div", { className: "border-b border-gray-300 pb-2 mb-4", children: _jsx("div", { className: "space-y-2", children: data.items.map((item, index) => (_jsxs("div", { children: [_jsxs("div", { className: "flex justify-between", children: [_jsx("span", { className: "truncate pr-2", children: item.name }), _jsx("span", { children: formatCurrency(item.total) })] }), _jsxs("div", { className: "text-xs text-gray-600 ml-2", children: [item.quantity, " \u00D7 ", formatCurrency(item.unitPrice)] })] }, index))) }) }), _jsxs("div", { className: "space-y-1 mb-4", children: [_jsxs("div", { className: "flex justify-between", children: [_jsx("span", { children: "Subtotal:" }), _jsx("span", { children: formatCurrency(data.subtotal) })] }), data.discountAmount && data.discountAmount > 0 && (_jsxs("div", { className: "flex justify-between text-red-600", children: [_jsx("span", { children: "Discount:" }), _jsxs("span", { children: ["-", formatCurrency(data.discountAmount)] })] })), _jsxs("div", { className: "flex justify-between", children: [_jsx("span", { children: "Tax:" }), _jsx("span", { children: formatCurrency(data.taxAmount) })] }), _jsxs("div", { className: "flex justify-between font-bold text-lg border-t border-gray-300 pt-1", children: [_jsx("span", { children: "TOTAL:" }), _jsx("span", { children: formatCurrency(data.total) })] })] }), _jsxs("div", { className: "border-t border-gray-300 pt-2 mb-4", children: [_jsxs("div", { className: "flex justify-between", children: [_jsx("span", { children: "Payment:" }), _jsx("span", { className: "capitalize", children: data.paymentMethod })] }), data.paymentMethod === 'cash' && data.cashReceived && (_jsxs(_Fragment, { children: [_jsxs("div", { className: "flex justify-between", children: [_jsx("span", { children: "Cash Received:" }), _jsx("span", { children: formatCurrency(data.cashReceived) })] }), data.change && data.change > 0 && (_jsxs("div", { className: "flex justify-between font-bold", children: [_jsx("span", { children: "Change:" }), _jsx("span", { children: formatCurrency(data.change) })] }))] }))] }), _jsxs("div", { className: "text-center text-xs text-gray-600 border-t border-gray-300 pt-4", children: [_jsx("p", { children: "Thank you for your business!" }), _jsx("p", { className: "mt-2", children: "Keep your receipt for returns" }), _jsx("p", { className: "mt-2", children: "Powered by UrutiIQ POS" })] }), _jsxs("div", { className: "text-center mt-4", children: [_jsx("div", { className: "inline-block bg-gray-200 p-2", children: _jsx("div", { className: "w-16 h-16 bg-black bg-opacity-10 flex items-center justify-center text-xs", children: "QR Code" }) }), _jsx("p", { className: "text-xs text-gray-600 mt-1", children: "Scan for digital receipt" })] })] }));
});
Receipt.displayName = 'Receipt';
