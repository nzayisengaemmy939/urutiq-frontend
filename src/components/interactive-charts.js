import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { useState } from "react";
import { Card, CardContent, CardHeader, CardTitle } from "../components/ui/card";
import { Button } from "../components/ui/button";
import { Badge } from "../components/ui/badge";
import { Tabs, TabsContent, TabsList, TabsTrigger } from "../components/ui/tabs";
import { BarChart3, LineChart, PieChart, TrendingUp, Download, Maximize2 } from "lucide-react";
const chartData = {
    revenue: [
        { month: "Jan", value: 45000, target: 40000 },
        { month: "Feb", value: 52000, target: 45000 },
        { month: "Mar", value: 48000, target: 50000 },
        { month: "Apr", value: 61000, target: 55000 },
        { month: "May", value: 58000, target: 60000 },
        { month: "Jun", value: 67000, target: 65000 },
    ],
    expenses: [
        { category: "Office Supplies", value: 12000, percentage: 15 },
        { category: "Software", value: 18000, percentage: 22 },
        { category: "Marketing", value: 25000, percentage: 31 },
        { category: "Utilities", value: 8000, percentage: 10 },
        { category: "Other", value: 18000, percentage: 22 },
    ],
    cashflow: [
        { week: "W1", inflow: 15000, outflow: 12000, net: 3000 },
        { week: "W2", inflow: 18000, outflow: 14000, net: 4000 },
        { week: "W3", inflow: 22000, outflow: 16000, net: 6000 },
        { week: "W4", inflow: 19000, outflow: 15000, net: 4000 },
    ],
};
export function InteractiveCharts() {
    const [activeChart, setActiveChart] = useState("revenue");
    const [selectedDataPoint, setSelectedDataPoint] = useState(null);
    const handleDataPointClick = (dataPoint) => {
        setSelectedDataPoint(dataPoint);
    };
    return (_jsxs(Card, { children: [_jsx(CardHeader, { children: _jsxs("div", { className: "flex items-center justify-between", children: [_jsxs("div", { className: "flex items-center gap-2", children: [_jsx(BarChart3, { className: "h-5 w-5 text-cyan-600" }), _jsx(CardTitle, { children: "Interactive Analytics" }), _jsx(Badge, { variant: "secondary", className: "bg-cyan-100 text-cyan-700", children: "Live Data" })] }), _jsxs("div", { className: "flex items-center gap-2", children: [_jsxs(Button, { size: "sm", variant: "outline", children: [_jsx(Download, { className: "h-4 w-4 mr-2" }), "Export"] }), _jsx(Button, { size: "sm", variant: "outline", children: _jsx(Maximize2, { className: "h-4 w-4" }) })] })] }) }), _jsx(CardContent, { children: _jsxs(Tabs, { value: activeChart, onValueChange: setActiveChart, children: [_jsxs(TabsList, { className: "grid w-full grid-cols-3", children: [_jsxs(TabsTrigger, { value: "revenue", className: "flex items-center gap-2", children: [_jsx(LineChart, { className: "h-4 w-4" }), "Revenue"] }), _jsxs(TabsTrigger, { value: "expenses", className: "flex items-center gap-2", children: [_jsx(PieChart, { className: "h-4 w-4" }), "Expenses"] }), _jsxs(TabsTrigger, { value: "cashflow", className: "flex items-center gap-2", children: [_jsx(BarChart3, { className: "h-4 w-4" }), "Cash Flow"] })] }), _jsx(TabsContent, { value: "revenue", className: "space-y-4", children: _jsxs("div", { className: "grid grid-cols-1 lg:grid-cols-3 gap-4", children: [_jsx("div", { className: "lg:col-span-2", children: _jsxs("div", { className: "h-64 bg-gradient-to-br from-cyan-50 to-blue-50 rounded-lg border border-cyan-200 p-4", children: [_jsxs("div", { className: "flex items-center justify-between mb-4", children: [_jsx("h3", { className: "font-medium text-gray-900", children: "Revenue vs Target" }), _jsxs("div", { className: "flex items-center gap-2", children: [_jsx("div", { className: "w-3 h-3 bg-cyan-500 rounded" }), _jsx("span", { className: "text-sm text-gray-600", children: "Actual" }), _jsx("div", { className: "w-3 h-3 bg-gray-300 rounded" }), _jsx("span", { className: "text-sm text-gray-600", children: "Target" })] })] }), _jsx("div", { className: "space-y-3", children: chartData.revenue.map((item, index) => (_jsxs("div", { className: "flex items-center gap-3 cursor-pointer hover:bg-white hover:bg-opacity-50 p-2 rounded", onClick: () => handleDataPointClick(item), children: [_jsx("div", { className: "w-8 text-sm text-gray-600", children: item.month }), _jsxs("div", { className: "flex-1 flex items-center gap-2", children: [_jsx("div", { className: "flex-1 bg-gray-200 rounded-full h-2", children: _jsx("div", { className: "bg-cyan-500 h-2 rounded-full transition-all", style: { width: `${(item.value / 70000) * 100}%` } }) }), _jsxs("div", { className: "text-sm font-medium text-gray-900", children: ["$", item.value.toLocaleString()] })] }), item.value > item.target && _jsx(TrendingUp, { className: "h-4 w-4 text-green-500" })] }, item.month))) })] }) }), _jsxs("div", { className: "space-y-4", children: [_jsxs("div", { className: "bg-white border border-cyan-200 rounded-lg p-4", children: [_jsx("h4", { className: "font-medium text-gray-900 mb-2", children: "Key Metrics" }), _jsxs("div", { className: "space-y-2", children: [_jsxs("div", { className: "flex justify-between", children: [_jsx("span", { className: "text-sm text-gray-600", children: "Total Revenue" }), _jsx("span", { className: "text-sm font-medium", children: "$351,000" })] }), _jsxs("div", { className: "flex justify-between", children: [_jsx("span", { className: "text-sm text-gray-600", children: "Growth Rate" }), _jsx("span", { className: "text-sm font-medium text-green-600", children: "+12.5%" })] }), _jsxs("div", { className: "flex justify-between", children: [_jsx("span", { className: "text-sm text-gray-600", children: "Target Achievement" }), _jsx("span", { className: "text-sm font-medium text-cyan-600", children: "108%" })] })] })] }), selectedDataPoint && (_jsxs("div", { className: "bg-cyan-50 border border-cyan-200 rounded-lg p-4", children: [_jsxs("h4", { className: "font-medium text-cyan-900 mb-2", children: [selectedDataPoint.month, " Details"] }), _jsxs("div", { className: "space-y-1", children: [_jsxs("div", { className: "text-sm", children: [_jsx("span", { className: "text-gray-600", children: "Revenue: " }), _jsxs("span", { className: "font-medium", children: ["$", selectedDataPoint.value.toLocaleString()] })] }), _jsxs("div", { className: "text-sm", children: [_jsx("span", { className: "text-gray-600", children: "Target: " }), _jsxs("span", { className: "font-medium", children: ["$", selectedDataPoint.target.toLocaleString()] })] }), _jsxs("div", { className: "text-sm", children: [_jsx("span", { className: "text-gray-600", children: "Variance: " }), _jsxs("span", { className: `font-medium ${selectedDataPoint.value > selectedDataPoint.target ? "text-green-600" : "text-red-600"}`, children: [selectedDataPoint.value > selectedDataPoint.target ? "+" : "", "$", (selectedDataPoint.value - selectedDataPoint.target).toLocaleString()] })] })] })] }))] })] }) }), _jsx(TabsContent, { value: "expenses", className: "space-y-4", children: _jsxs("div", { className: "grid grid-cols-1 lg:grid-cols-2 gap-4", children: [_jsxs("div", { className: "h-64 bg-gradient-to-br from-cyan-50 to-blue-50 rounded-lg border border-cyan-200 p-4", children: [_jsx("h3", { className: "font-medium text-gray-900 mb-4", children: "Expense Breakdown" }), _jsx("div", { className: "space-y-3", children: chartData.expenses.map((item, index) => (_jsxs("div", { className: "flex items-center gap-3", children: [_jsx("div", { className: "w-4 h-4 rounded", style: { backgroundColor: `hsl(${index * 60 + 180}, 60%, 50%)` } }), _jsxs("div", { className: "flex-1", children: [_jsxs("div", { className: "flex justify-between items-center", children: [_jsx("span", { className: "text-sm text-gray-900", children: item.category }), _jsxs("span", { className: "text-sm font-medium", children: [item.percentage, "%"] })] }), _jsxs("div", { className: "text-xs text-gray-600", children: ["$", item.value.toLocaleString()] })] })] }, item.category))) })] }), _jsxs("div", { className: "space-y-4", children: [_jsxs("div", { className: "bg-white border border-cyan-200 rounded-lg p-4", children: [_jsx("h4", { className: "font-medium text-gray-900 mb-2", children: "Expense Insights" }), _jsxs("div", { className: "space-y-2", children: [_jsxs("div", { className: "text-sm", children: [_jsx("span", { className: "text-gray-600", children: "Largest Category: " }), _jsx("span", { className: "font-medium", children: "Marketing (31%)" })] }), _jsxs("div", { className: "text-sm", children: [_jsx("span", { className: "text-gray-600", children: "Total Expenses: " }), _jsx("span", { className: "font-medium", children: "$81,000" })] }), _jsxs("div", { className: "text-sm", children: [_jsx("span", { className: "text-gray-600", children: "vs Last Month: " }), _jsx("span", { className: "font-medium text-red-600", children: "+8.2%" })] })] })] }), _jsxs("div", { className: "bg-yellow-50 border border-yellow-200 rounded-lg p-4", children: [_jsx("h4", { className: "font-medium text-yellow-900 mb-2", children: "Optimization Tip" }), _jsx("p", { className: "text-sm text-yellow-800", children: "Software expenses can be reduced by 15% by consolidating unused licenses." })] })] })] }) }), _jsx(TabsContent, { value: "cashflow", className: "space-y-4", children: _jsxs("div", { className: "h-64 bg-gradient-to-br from-cyan-50 to-blue-50 rounded-lg border border-cyan-200 p-4", children: [_jsx("h3", { className: "font-medium text-gray-900 mb-4", children: "Weekly Cash Flow" }), _jsx("div", { className: "space-y-3", children: chartData.cashflow.map((item, index) => (_jsxs("div", { className: "flex items-center gap-4", children: [_jsx("div", { className: "w-8 text-sm text-gray-600", children: item.week }), _jsxs("div", { className: "flex-1 grid grid-cols-3 gap-2", children: [_jsxs("div", { className: "text-center", children: [_jsxs("div", { className: "text-sm font-medium text-green-600", children: ["+$", item.inflow.toLocaleString()] }), _jsx("div", { className: "text-xs text-gray-600", children: "Inflow" })] }), _jsxs("div", { className: "text-center", children: [_jsxs("div", { className: "text-sm font-medium text-red-600", children: ["-$", item.outflow.toLocaleString()] }), _jsx("div", { className: "text-xs text-gray-600", children: "Outflow" })] }), _jsxs("div", { className: "text-center", children: [_jsxs("div", { className: `text-sm font-medium ${item.net > 0 ? "text-green-600" : "text-red-600"}`, children: [item.net > 0 ? "+" : "", "$", item.net.toLocaleString()] }), _jsx("div", { className: "text-xs text-gray-600", children: "Net" })] })] })] }, item.week))) })] }) })] }) })] }));
}
